name: Build Iosevka

on:
  workflow_dispatch:
    inputs:
      build_plan:
        description: 'Nama build plan'
        required: true
        default: 'IosvekaCustom'
      build_targets:
        description: 'Build targets (contents,ttf,ttf-unhinted)'
        required: true
        default: 'contents'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_PAT }}  # pastikan PAT dengan workflow permission tersedia

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y nodejs npm ttfautohint fontforge python3-pip git zip

      - name: Setup Iosevka if missing
        run: |
          if [ ! -d "Iosevka" ]; then
            git clone --depth=1 https://github.com/be5invis/Iosevka.git
            cp ./config/private-build-plans.toml Iosevka/private-build-plans.toml
            cd Iosevka
            npm install
          fi

      - name: Run build script
        run: |
          chmod +x run.sh
          ./run.sh "${{ github.event.inputs.build_plan }}" "${{ github.event.inputs.build_targets }}"

      - name: Zip dist
        run: |
          RELEASE_TAG=$(python3 -c "import tomllib; print(tomllib.load(open('config/workflow.toml','rb'))['release_tag'])")
          zip -r "${RELEASE_TAG}.zip" Iosevka/dist/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: fonts
          path: "${{ github.workspace }}/my-iosveka.zip"

      - name: Delete previous release/tag if exists
        run: |
          RELEASE_TAG=$(python3 -c "import tomllib; print(tomllib.load(open('config/workflow.toml','rb'))['release_tag'])")
          REPO="${GITHUB_REPOSITORY}"
          if gh release view "$RELEASE_TAG" &>/dev/null || git ls-remote --tags https://github.com/$REPO.git | grep -q "$RELEASE_TAG"; then
              echo "Deleting previous release/tag $RELEASE_TAG..."
              gh release delete "$RELEASE_TAG" -y || echo "No release found"
              git push origin --delete "$RELEASE_TAG" || echo "No remote tag to delete"
          else
              echo "No previous release/tag $RELEASE_TAG found, skipping deletion"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "$(python3 -c "import tomllib; print(tomllib.load(open('config/workflow.toml','rb'))['release_tag'])")"
          name: "Iosevka Build ${{ github.event.inputs.build_plan }}"
          files: "${{ github.workspace }}/my-iosveka.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}