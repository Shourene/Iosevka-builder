name: Build

on:
  workflow_dispatch:
    inputs:
      build_plan:
        description: 'Nama build plan'
        required: true
        default: 'IosvekaCustom'
      build_targets:
        description: 'Build targets (contents,ttf,ttf-unhinted)'
        required: true
        default: 'contents'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nodejs npm ttfautohint fontforge python3-pip git gh zip

      - name: Run build script
        run: |
          chmod +x run.sh
          ./run.sh "${{ github.event.inputs.build_plan }}" "${{ github.event.inputs.build_targets }}"

      - name: Read release tag
        id: read_tag
        run: |
          RELEASE_TAG=$(python3 -c "import tomllib; print(tomllib.load(open('config/workflow.toml','rb'))['release_tag'])")
          echo "release_tag=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Delete previous release and tag
        run: |
          TAG="${{ steps.read_tag.outputs.release_tag }}"
          REPO="${GITHUB_REPOSITORY}"

          RELEASE_EXISTS=$(gh release view "$TAG" &>/dev/null && echo "yes" || echo "no")
          TAG_EXISTS=$(git ls-remote --tags https://github.com/$REPO.git | grep -q "$TAG" && echo "yes" || echo "no")

          if [ "$RELEASE_EXISTS" = "yes" ] || [ "$TAG_EXISTS" = "yes" ]; then
              echo "Deleting previous release/tag $TAG..."
              gh release delete "$TAG" -y || echo "No release found"
              git push origin --delete "$TAG" || echo "No remote tag to delete"
          else
              echo "No previous release/tag $TAG found, skipping deletion"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload zipped build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Iosevka-build
          path: ${{ steps.read_tag.outputs.release_tag }}.zip

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.read_tag.outputs.release_tag }}"
          name: "Iosevka Build ${{ github.event.inputs.build_plan }}"
          files: ${{ steps.read_tag.outputs.release_tag }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}